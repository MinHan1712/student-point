openapi: 3.0.1
info:
  title: Studentpoint API
  description: Studentpoint API documentation
  version: 0.0.1
servers:
  - url: http://127.0.0.1:8080/api
x-wso2-basePath: ''
x-wso2-production-endpoints:
  urls:
    - http://127.0.0.1:8085/api
paths:
  /login:
    post:
      tags:
        - statistic
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
  /statistic/create:
    post:
      tags:
        - statistic
      operationId: statisticCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatisticCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
  /conduct/get:
    get:
      tags:
        - classes-resource
      operationId: conductGet
      parameters:
        - name: classIName
          in: query
          required: true
          schema:
            type: string
        - name: academicYear
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConductScoresCustomDTO'
  /conduct/create:
    post:
      tags:
        - classes-resource
      operationId: conductCreate
      parameters:
        - name: classIName
          in: query
          required: true
          schema:
            type: string
        - name: academicYear
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
  /class-courser/get/{id}:
    get:
      tags:
        - classes-resource
      operationId: classCourserGet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassCourseRes'
  /classes/create:
    post:
      tags:
        - classes-resource
      operationId: createClasses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassesCustomDTO'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClassesCustomDTO'
  /classes/update/{id}:
    post:
      tags:
        - classes-resource
      operationId: updateClasses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassesCustomDTO'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClassesCustomDTO'
  /classes/delete/{id}:
    post:
      tags:
        - classes-resource
      operationId: deleteClasses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClassesCustomDTO'
  /classes/get:
    get:
      tags:
        - classes-resource
      operationId: getClasses
      parameters:
        - name: classCode
          in: query
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClassesCustomDTO'

  /grades/multi:
    post:
      tags:
        - grades-resource
      operationId: multiGradesScores
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GradesCustomDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /conduct-scores/multi:
    post:
      tags:
        - conduct-scores-resource
      operationId: multiConductScores
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConductScoresCustomDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /grades/semester-summary/{studentId}:
    get:
      summary: Lấy tổng hợp điểm học kỳ của sinh viên
      description: Trả về điểm trung bình, tổng tín chỉ và xếp loại theo từng học kỳ của sinh viên.
      operationId: semesterSummary
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID của sinh viên
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: array
                    items:
                      $ref: '#/components/schemas/SemesterGradeFullSummary'
                  grades:
                    type: array
                    items:
                      $ref: '#/components/schemas/GradesCustomDTO'
                  student:
                    $ref: '#/components/schemas/StudentCustomDTO'

components:
  schemas:
    SemesterGradeFullSummary:
      type: object
      properties:
        studentId:
          type: string
        fullName:
          type: string
          example: Nguyễn Văn A
        academicYear:
          type: string
          example: 2024-2025 HK1
        totalCredits:
          type: string
          example: 18
        avgScore10:
          type: string
          example: 7.5
        avgScore4:
          type: string
          example: 3.2
        semesterRanking:
          type: string
          example: Giỏi

    GradesCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        gradesCode:
          type: string
        credit:
          type: integer
          format: int32
        studyAttempt:
          type: integer
          format: int32
        examAttempt:
          type: integer
          format: int32
        processScore:
          type: number
        examScore:
          type: number
        score10:
          type: number
        score4:
          type: number
        letterGrade:
          type: string
        evaluation:
          type: string
        notes:
          type: string
        status:
          type: boolean
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
        student:
          $ref: '#/components/schemas/StudentCustomDTO'
        classes:
          $ref: '#/components/schemas/ClassesCusDTO'

    ConductScoresCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        conductScoresCode:
          type: string
        academicYear:
          type: string
        score:
          type: integer
          format: int32
        classification:
          type: integer
          format: int32
        evaluation:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
        student:
          $ref: '#/components/schemas/StudentCustomDTO'
    StudentCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        studentCode:
          type: string
        fullName:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        notes:
          type: string
        status:
          type: string
        dateEnrollment:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
        className:
          type: string
        courseYear:
          type: string
        faculties:
          $ref: '#/components/schemas/FacultiesCustomDTO'

    ClassesCusDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        classCode:
          type: string
        className:
          type: string
        classroom:
          type: string
        credits:
          type: integer
          format: int32
        numberOfSessions:
          type: integer
          format: int32
        totalNumberOfStudents:
          type: integer
          format: int32
        startDate:
          type: string
        endDate:
          type: string
        classType:
          type: string
        deliveryMode:
          type: string
        status:
          type: boolean
        notes:
          type: string
        description:
          type: string
        academicYear:
          type: string
        parentId:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string

        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
        course:
          $ref: '#/components/schemas/CourseCustomDTO'
        teachers:
          $ref: '#/components/schemas/TeachersCustomDTO'
    CourseCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        courseCode:
          type: string
        courseTitle:
          type: string
        credits:
          type: integer
          format: int32
        lecture:
          type: integer
          format: int32
        tutorialDiscussion:
          type: integer
          format: int32
        practical:
          type: integer
          format: int32
        laboratory:
          type: integer
          format: int32
        selfStudy:
          type: integer
          format: int32
        numberOfSessions:
          type: integer
          format: int32
        courseType:
          type: string
        notes:
          type: string
        status:
          type: boolean
        semester:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string

    TeachersCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        teachersCode:
          type: string
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        position:
          type: string
        qualification:
          type: string
        status:
          type: boolean
        notes:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
        faculties:
          $ref: '#/components/schemas/FacultiesCustomDTO'
    FacultiesCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        facultyCode:
          type: string
        facultyName:
          type: string
        description:
          type: string
        establishedDate:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        notes:
          type: string
        parentId:
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string

    ClassesCustomDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        className:
          type: string
        classroom:
          type: string
        credits:
          type: integer
          format: int32
        numberOfSessions:
          type: integer
          format: int32
        totalNumberOfStudents:
          type: integer
          format: int32
        startDate:
          type: string
        endDate:
          type: string
        classType:
          type: string
        deliveryMode:
          type: string
        notes:
          type: string
        description:
          type: string
        academicYear:
          type: string
        parentId:
          type: string
        courseId:
          type: integer
          format: int64
        teachersId:
          type: integer
          format: int64
        studentIds:
          type: array
          items:
            type: integer
            format: int64
        studentIdRemove:
          type: array
          items:
            type: integer
            format: int64
    ResponseObject:
      type: object
      additionalProperties: true
      example:
        someKey: 'value'
        anotherKey: 123

    ClassCourseRes:
      type: object
      properties:
        id:
          type: integer
          format: int64
        courses:
          type: array
          items:
            $ref: '#/components/schemas/IClassName'
        facultyId:
          type: integer
          format: int64

    IClassName:
      type: object
      properties:
        course:
          type: string
        clasName:
          type: array
          items:
            type: string

    StatisticCreate:
      type: object
      properties:
        type:
          type: string
        facultyId:
          type: integer
          format: int64
        academicYear:
          type: string
        minTotalCredits:
          type: integer
        node:
          type: string
